generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model avaliacoes {
  id         Int       @id @default(autoincrement())
  usuario_id Int?
  nota       Int?
  comentario String?
  usuarios   usuarios? @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([usuario_id], map: "idx_avaliacoes_usuario_id")
}

model historicotransacoes {
  id         Int       @id @default(autoincrement())
  usuario_id Int
  troca_id   Int
  trocas     trocas   @relation(fields: [troca_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuarios   usuarios @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model livros {
  id             Int       @id @default(autoincrement())
  usuario_id     Int
  titulo         String    @db.VarChar(255)
  autor          String    @db.VarChar(255)
  genero         String   @db.VarChar(255)
  ano_publicacao Int
  usuarios       usuarios @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  trocas         trocas[]

  @@index([usuario_id], map: "idx_livros_usuario_id")
}

model mensagenschat {
  id         Int       @id @default(autoincrement())
  usuario_id Int
  mensagem   String
  usuarios   usuarios @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([usuario_id], map: "idx_mensagenschat_usuario_id")
}

model trocas {
  id                  Int                   @id @default(autoincrement())
  livro_id            Int
  usuario_id          Int
  status              status_enum          @default(pendente)
  historicotransacoes historicotransacoes[]
  livros              livros               @relation(fields: [livro_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuarios            usuarios             @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([livro_id], map: "idx_trocas_livro_id")
  @@index([usuario_id], map: "idx_trocas_usuario_id")
}

model usuarios {
  id                  Int                   @id @default(autoincrement())
  nome                String                @db.VarChar(255)
  email               String                @unique @db.VarChar(255)
  senha               String                @db.VarChar(255)
  reputacao           Float                @default(0.0)
  avaliacoes          avaliacoes[]
  historicotransacoes historicotransacoes[]
  livros              livros[]
  mensagenschat       mensagenschat[]
  trocas              trocas[]
}

enum status_enum {
  pendente
  aprovado
  rejeitado
}
